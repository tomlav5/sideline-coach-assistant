-- Finalize match: close active periods, compute totals, mark fixture completed
-- Generated by Cascade

begin;

create or replace function public.finalize_match(p_fixture_id uuid)
returns void
language plpgsql
security definer
set search_path = public
as $$
declare
  v_now timestamptz := now();
  v_total_seconds bigint := 0;
begin
  -- Ensure fixture exists and is not already completed
  if not exists (select 1 from public.fixtures f where f.id = p_fixture_id) then
    raise exception 'Fixture % not found', p_fixture_id using errcode = 'P0002';
  end if;

  -- Close any active period for this fixture
  update public.match_periods mp
  set actual_end_time = coalesce(mp.actual_end_time, v_now),
      is_active = false,
      pause_time = null
  where mp.fixture_id = p_fixture_id
    and (mp.is_active = true or mp.actual_end_time is null);

  -- Compute total elapsed seconds across all periods for this fixture
  -- Uses actual_start_time and actual_end_time minus total_paused_seconds, never negative
  select coalesce(sum(
           greatest(
             extract(epoch from (coalesce(mp.actual_end_time, v_now) - mp.actual_start_time))::bigint
             - coalesce(mp.total_paused_seconds, 0),
             0
           )
         ), 0)
    into v_total_seconds
  from public.match_periods mp
  where mp.fixture_id = p_fixture_id
    and mp.actual_start_time is not null;

  -- Update fixture to completed and clear current_period_id
  update public.fixtures f
  set status = 'completed',
      match_status = 'completed',
      match_state = jsonb_build_object(
        'status', 'completed',
        'total_time_seconds', v_total_seconds
      ),
      current_period_id = null,
      ended_at = coalesce(f.ended_at, v_now)
  where f.id = p_fixture_id;

  -- Optionally refresh report/materialized views if available
  -- This will no-op if not present; wrap in exception block
  begin
    perform public.refresh_report_views();
  exception when undefined_function then
    -- ignore if the helper function does not exist
    null;
  end;
end;
$$;

-- Permissions: allow authenticated to execute (tighten as needed)
grant execute on function public.finalize_match(uuid) to authenticated;

commit;
